<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TargetEndpoint name="immunisation-history-target">
    <FaultRules>
        <FaultRule name="access_token_invalid">
            <Step>
                <Name>RaiseFault.InvalidAccessToken</Name>
            </Step>
            <Condition>oauthV2.OauthV2.VerifyAccessToken.failed</Condition>
        </FaultRule>
        <FaultRule name="RaiseFault.MissingNHSDUserIdentity">
            <Condition>error.message Equals "Failed to Resolve Variable : policy(AssignMessage.AddUserIdHeader) variable(accesstoken.id_token)"</Condition>
            <Step>
                <Name>RaiseFault.MissingNHSDUserIdentity</Name>
            </Step>
        </FaultRule>
        <FaultRule name="allow_raisefaults">
            <!-- Fault rule to prevent the DefaultFaultRule from executing when RaiseFault is used in a flow -->
            <Step>
                <Name>AssignMessage.CatchallErrorMessage</Name>
                <Condition>(fault.name NotEquals "RaiseFault")</Condition>
            </Step>
            <Condition>(fault.name Equals "RaiseFault")</Condition>
        </FaultRule>
    </FaultRules>
    <PreFlow>
        <Request>
            <Step>
                <Name>OauthV2.VerifyAccessToken</Name>
            </Step>
            <Step>
                <Name>AssignMessage.AddUserIdHeader</Name>
                <Condition>accesstoken.auth_grant_type == "token_exchange"</Condition>
            </Step>
            <Step>
                <Name>RaiseFault.MissingNHSDUserIdentity</Name>
                <Condition>
                    (accesstoken.auth_grant_type == "token_exchange") And
                    (
                        (request.header.NHSD-User-Identity Is null) Or
                        (request.header.NHSD-User-Identity Equals "")
                    )
                </Condition>
            </Step>
            <Step>
                <Name>AccessEntity.GetApp</Name>
            </Step>
            <Step>
                <Name>ExtractVariables.GetProofingLevel</Name>
            </Step>
            <Step>
                <Name>Javascript.AddClientRPDetailsHeader</Name>
            </Step>
            <Step>
                <Name>Quota</Name>
            </Step>
            <Step>
                <Name>SpikeArrest</Name>
            </Step>
        </Request>
    </PreFlow>
    <HTTPTargetConnection>
        <SSLInfo>
            <Enabled>true</Enabled>
        </SSLInfo>
        <LoadBalancer>
            <Server name="immunisation-history"/>
        </LoadBalancer>
        <Properties>
          <Property name="keepalive.timeout.millis">20000</Property>
        </Properties>
        <Path>/immunisation-history</Path>
    </HTTPTargetConnection>
</TargetEndpoint>